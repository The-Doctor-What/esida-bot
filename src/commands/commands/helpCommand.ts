import dedent from "dedent-js";
import commands from "../index";
import {Keyboard} from "vk-io";

export async function helpCommand(msg, args, sender) {
    const command = args ? args[0] : null
    if (!command) {
        const {text, keyboard} = await helpMain(sender)
        await msg.send({message: text, keyboard})
    } else {
        let cmd = commands.find(x => x.name == command || x.aliases.includes(command))
        if (!cmd) return await msg.send("üö´ –¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! üö´")
        if (sender.access < cmd.access) return await msg.send("üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã! üö´")
        await msg.send(dedent`üîπ ${cmd.usage} - ${cmd.description}
            ${cmd.aliases.length > 0 ? `üîπ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: ${cmd.aliases.join(", ")}` : ""}
            üî∏ –¢—Ä–µ–±—É–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: ${cmd.access}
            üî∏ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: ${cmd.minArgs}
            
            ${cmd.fullHelp}`
        )
    }
}

export async function helpGroup(group, access) {
    let text = ``
    for (const cmd of group) {
        if (access >= cmd.access && cmd.description != "") text += `üîπ ${cmd.usage} - ${cmd.description}\n`
    }
    if (text == ``) text = `–î–ª—è –≤–∞—Å –≤ –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n`
    text = `\nüìö –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ üìö\n\n${text}`
    return text
}

export async function helpMain(sender) {
    const text = dedent(`üìö –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: üìö
        
        –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–º–∞–Ω–¥, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –Ω–µ–π.
        
        1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ
        2. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        3. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ñ–æ—Ä—É–º–æ–º
        4. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ —Å–Ω—è—Ç–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        5. –ü—Ä–æ—á–∏–µ –∫–æ–º–∞–Ω–¥—ã
        6. –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        `);
    const keyboard = Keyboard
        .keyboard([
            [
                Keyboard.callbackButton({
                    label: '1',
                    color: `primary`,
                    payload: {
                        command: "help",
                        args: ["info"],
                        sender: sender.vk_id
                    }
                }),
                Keyboard.callbackButton({
                    label: '2',
                    color: `primary`,
                    payload: {
                        command: 'help',
                        args: ['data'],
                        sender: sender.vk_id
                    },
                }),
                Keyboard.callbackButton({
                    label: '3',
                    color: `primary`,
                    payload: {
                        command: 'help',
                        args: ['forum'],
                        sender: sender.vk_id
                    },
                }),
            ],
            [
                Keyboard.callbackButton({
                    label: '4',
                    color: `primary`,
                    payload: {
                        command: 'help',
                        args: ['post'],
                        sender: sender.vk_id
                    },
                }),
                Keyboard.callbackButton({
                    label: '5',
                    color: `primary`,
                    payload: {
                        command: 'help',
                        args: ['others'],
                        sender: sender.vk_id
                    },
                }),
                Keyboard.callbackButton({
                    label: '6',
                    color: `primary`,
                    payload: {
                        command: 'help',
                        args: ['dev'],
                        sender: sender.vk_id
                    },
                })
            ]]
        ).inline(true)
    return {text, keyboard}
}