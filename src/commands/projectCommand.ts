import {loadFracs} from "../database";
import {helpEsida} from "../others/helpTexts";
import {vkGroup} from "../bots";
import {messageSend, sleep} from "../others/utils";

export let works = true

export async function stopProject(msg, args, sender) {
    if (works) {
        await pauseProject(msg)
        await sleep(20)
    }
    await msg.send(`üö´ –í—Å–µ –º–æ–¥—É–ª–∏ –±—ã–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω—ã! üö´`)
    console.log(`Logs ¬ª ${sender.rank} @id${sender.vk_id}(${sender.nick}) –≤—ã–∫–ª—é—á–∏–ª –≤—Å–µ –º–æ–¥—É–ª–∏!`)
    await messageSend(`${sender.rank} @id${sender.vk_id}(${sender.nick}) –≤—ã–∫–ª—é—á–∏–ª –≤—Å–µ –º–æ–¥—É–ª–∏!`, 3, vkGroup)
    process.exit(0)
}

export async function pauseProject(msg) {
    const text = works ? `–†–∞–±–æ—Ç–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!` : `–†–∞–±–æ—Ç–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞!`
    await msg.send(`‚úÖ ${text}`)
    console.log(`Logs ¬ª ${text}`)
    works = !works
}

export async function reloadFractions(msg) {
    await loadFracs()
    await msg.send(`‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!`)
    console.log(`Logs ¬ª –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã`)
}

export async function statusProject(msg) {
    await msg.send(`üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª–µ–π: ${works ? "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" : "üö´ –í—ã–∫–ª—é—á–µ–Ω—ã"}`)
}
export async function project(msg, args, sender) {
    const actions = {
        "stop": stopProject,
        "pause": pauseProject,
        "upfraction": reloadFractions,
        "status": statusProject,
    }
    if (!actions[args[0]]) return await msg.send(`üö´ –î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! üö´\n${helpEsida}`)
    await actions[args[0]](msg, args, sender)
}