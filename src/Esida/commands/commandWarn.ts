import {devId, getFraction, getUserData, getVkId, saveUser, userid} from "../../database";
import moment from "moment";
import {vkGroup} from "../../bots";
moment.locale('ru')

export async function setWarn(msg, args, sender) {
    await setData(msg, args, sender, {tag: "warns", name: "–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"})
}

export async function setVig(msg, args, sender) {
    await setData(msg, args, sender, {tag: "vigs", name: "–≤—ã–≥–æ–≤–æ—Ä–æ–≤"})
}

export async function setFWarn(msg, args, sender) {
    await setData(msg, args, sender, {tag: "fwarns", name: "—Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤"})
}

export async function setDays(msg, args, sender) {
    await setData(msg, args, sender, {tag: "term", name: "–¥–Ω–µ–π –∫ —Å—Ä–æ–∫—É"})
}

export async function setScore(msg, args, sender) {
    await setData(msg, args, sender, {tag: "score", name: "–±–∞–ª–ª–æ–≤"})
}

export async function setLitrbol(msg, args, sender) {
    await setData(msg, args, sender, {tag: "litrbol", name: "–æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∞–ª–ª–ª–æ–≤"})
}
export async function setRep(msg, args, sender) {
    await setData(msg, args, sender, {tag: "rep", name: "—Ä–µ–ø—É—Ç–∞—Ü–∏–∏"})
}

export async function setData(msg, args, sender, type = {tag: "warns", name: "–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"}) {
    let user = await getVkId(args[0])
    if (!user) user = (args[0])
    let action = "set"
    if (args[1].startsWith("+")) action = "+"
    else if (args[1].startsWith("-")) action = "-"
    let count = args[1].replace(/[^0-9]/g, "")
    count = parseInt(count)
    let reason = args.slice(2).join(" ")
    let time = moment()
    let data = await getUserData(user)
    if (!data) {
        return msg.send({
            message: `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –µ—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –æ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @id${devId} (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É)! üö´`,
            disable_mentions: 1
        })
    }
    let text = `@id${msg.senderId}(${sender.nick}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id${data.vk_id} (${data.nick})\n\n`
    if (!data) return msg.send("üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω! üö´")
    let actionText = "–£—Å—Ç–∞–Ω–æ–≤–∏–ª"
    if (action == "+") actionText = "–í—ã–¥–∞–ª"
    else if (action == "-") actionText = "–°–Ω—è–ª"
    if (data.access >= sender.access) return msg.send(`üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –∂–µ –∏–ª–∏ –±–æ–ª—å—à–∏–º —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞! üö´`)
    text += `üîπ ${actionText} ${count} ${type.name}\n`
    if (type.tag == "score" && action == "+") {
        data.litrbol += count
    }
    if (action == "set") data[type.tag] = count
    else if (action == "+") data[type.tag] += count
    else if (action == "-") data[type.tag] -= count
    data.history[type.tag].push({user: msg.senderId, time: time, action: action, count: count, reason: reason})
    text += await checkWarns(data)
    text += `üî∏ –ü—Ä–∏—á–∏–Ω–∞: ${reason}\nüî∏ –í—Ä–µ–º—è: ${time.format("DD.MM.YYYY HH:mm:ss")}\n\n`
    await saveUser(data)
    msg.send({ message: text, disable_mentions: 1, dont_parse_links: 1 })
    let chat = await getFraction(data.frac, "chat")
    if (data.access < 4 && chat != msg.chatId) await vkGroup.api.messages.send({
        chat_id: chat,
        message: text,
        dont_parse_links: 1,
        disable_mentions: 1,
        random_id: 0
    })
}

export async function checkWarns(data) {
    let time = moment()
    let text = ``
    while (true) {
        if (data.access < 4) {
            if (data.warns >= 3) {
                data.warns -= 3
                data.vigs += 1
                data.history.warns.push({user: userid, time: time, action: "-", count: 3, reason: "3/3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"})
                data.history.vigs.push({user: userid, time: time, action: "+", count: 1, reason: "3/3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"})
                text += `üîπ –°–Ω—è–ª 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –≤—ã–¥–∞–ª –≤—ã–≥–æ–≤–æ—Ä\n`
            } else if (data.warns <= -1 && data.vigs >= 1) {
                data.warns += 3
                data.vigs -= 1
                data.history.warns.push({
                    user: userid,
                    time: time,
                    action: "+",
                    count: 3,
                    reason: "-1/3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
                })
                data.history.vigs.push({user: userid, time: time, action: "-", count: 1, reason: "-1/3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"})
                text += `üîπ –í—ã–¥–∞–ª 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ —Å–Ω—è–ª –≤—ã–≥–æ–≤–æ—Ä\n`
            } else if (data.fwarns >= 2) {
                data.fwarns -= 2
                data.warns += 1
                data.history.fwarns.push({
                    user: userid,
                    time: time,
                    action: "-",
                    count: 2,
                    reason: "2/2 —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤"
                })
                data.history.warns.push({
                    user: userid,
                    time: time,
                    action: "+",
                    count: 1,
                    reason: "2/2 —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤"
                })
                text += `üîπ –°–Ω—è–ª 2 —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤ –∏ –≤—ã–¥–∞–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n`
            } else if (data.fwarns <= -1) {
                data.fwarns += 2
                data.warns -= 1
                data.history.fwarns.push({
                    user: userid,
                    time: time,
                    action: "+",
                    count: 2,
                    reason: "-1/2 —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤"
                })
                data.history.warns.push({
                    user: userid,
                    time: time,
                    action: "-",
                    count: 1,
                    reason: "-1/2 —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤"
                })
                text += `üîπ –í—ã–¥–∞–ª 2 —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–≥–æ–≤–æ—Ä–æ–≤ –∏ —Å–Ω—è–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n`
            } else if (data.score > 70 && data.access == 1) {
                data.score = 70
                data.history.score.push({
                    user: userid,
                    time: time,
                    action: "set",
                    count: 70,
                    reason: "–±–æ–ª—å—à–µ 70 –±–∞–ª–ª–æ–≤"
                })
                text += `üîπ –£—Å—Ç–∞–Ω–æ–≤–∏–ª 70 –±–∞–ª–ª–æ–≤ (–õ–∏–º–∏—Ç –±–∞–ª–ª–æ–≤)\n`
            } else if (data.score > 140 && (data.access == 2 || (data.frac == 6 && data.access == 3))) {
                data.score = 140
                data.history.score.push({
                    user: userid,
                    time: time,
                    action: "set",
                    count: 140,
                    reason: "–±–æ–ª—å—à–µ 140 –±–∞–ª–ª–æ–≤"
                })
                text += `üîπ –£—Å—Ç–∞–Ω–æ–≤–∏–ª 140 –±–∞–ª–ª–æ–≤ (–õ–∏–º–∏—Ç –±–∞–ª–ª–æ–≤)\n`
            } else if (data.score > 160 && data.access == 3 && data.frac != 6) {
                data.score = 160
                data.history.score.push({
                    user: userid,
                    time: time,
                    action: "set",
                    count: 160,
                    reason: "–±–æ–ª—å—à–µ 160 –±–∞–ª–ª–æ–≤"
                })
                text += `üîπ –£—Å—Ç–∞–Ω–æ–≤–∏–ª 160 –±–∞–ª–ª–æ–≤ (–õ–∏–º–∏—Ç –±–∞–ª–ª–æ–≤)\n`
            } else break
        } else break
    }
    await saveUser(data)
    return text
}