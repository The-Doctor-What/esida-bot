import {devId, supabase} from "./database";
import {getVkId} from "../utils/vk";

export async function getAccess(id, access) {
    if (access == 0) return true
    const user = await getUserData(id)
    if (!user) return false
    else return user.access >= access;
}

export async function getUserData(user, table = "users") {
    const isNum = !isNaN(Number(user))
    const {data, error} = await supabase
        .from(table)
        .select("*")
        .eq(isNum ? 'vk_id' : 'nick', user).maybeSingle()
    if (error) {
        console.error(`Logs ¬ª –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:`)
        console.error(error)
    } else {
        return data
    }
}

export async function saveUser(user) {
    const {data, error} = await supabase
        .from("users")
        .upsert(user)
    if (error || !data) {
        console.error(`Logs ¬ª –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:`)
        console.error(error)
    } else {
        return data
    }
}

export async function checkUser(msg, data, sender, archive = true) {
    const user = await getUserData(await getVkId(data.toString()) || data)

    if (!user)
        await msg.send({
            message: `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –µ—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –æ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @id${devId} (—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É)! üö´`,
            disable_mentions: 1
        })
    else if (user.access == 0 && sender.access < 5) await msg.send(`üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ä—Ö–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üö´`)
    else if (user.access == 0 && !archive) await msg.send(`üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—Ä—Ö–∏–≤–Ω—ã–π, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å –Ω–∏–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å! üö´`)
    else return user

    return undefined
}