import {getFraction, userid} from "../database/database";
import {vkGroup, vkUser} from "../database/bots";
import {getGender} from "./vk";

export async function messageSend(cmd, id = 100, vk = vkUser, keyboard: any = undefined) {
    if (keyboard == undefined) {
        await vk.api.messages.send({
            chat_id: id,
            message: cmd,
            random_id: 0
        })
    } else await vk.api.messages.send({
        chat_id: id,
        message: cmd,
        keyboard: keyboard,
        random_id: 0
    })
}

export async function sendMessage(id, msg, message) {
    if (userid == id) return await msg.send('üö´ | –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É!')

    const friendCheck = await vkUser.api.friends.get({user_id: userid})
    if (!friendCheck.items.includes(Number(id))) {
        await vkUser.api.friends.add({
            user_id: id,
            text: message,
        })
        await msg.send('üö´ | –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—ç—Ç–æ–º—É –≠–≤–µ–ª–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ –µ–º—É –∑–∞—è–≤–∫—É –≤ –¥—Ä—É–∑—å—è!')
        return
    } else {
        await vkUser.api.messages.send({
            peer_id: id,
            message: message,
            random_id: 0
        })
        await msg.send('‚úÖ | –≠–≤–µ–ª–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!')
    }
}

export async function unInviteMessage(user, sender, reason, visable = true) {
    const text = `
        ${sender.rank} @id${sender.vk_id} (${sender.nick}) —Å–Ω—è–ª${await getGender(sender.vk_id)} @id${user.vk_id} (${user.nick})
        C –¥–æ–ª–∂–Ω–æ—Å—Ç–∏: ${user.rank}
        ${user.oldaccess < 4 ? await getFraction(user.fraction) : ""}
        –ü—Ä–∏—á–∏–Ω–∞: ${visable ? reason : "–°–∫—Ä—ã—Ç–∞"}`

    await messageSend(text, await getFraction(100, "chat"), vkGroup)
    if (user.oldaccess < 5) {
        await messageSend(text, await getFraction(user.fraction, "chat"), vkGroup)
    }
}