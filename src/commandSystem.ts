import {group, user} from "./bots";
import {addText, form, fracs, promotion, recovery, removedCandidate, uval} from "./personnel";
import {getID} from "./others/utils";
import {help} from "./commands/commandHelp";
import {justallCommand} from "./others/justall";
import {stats} from "./commands/commandStats";
import {listUsers} from "./commands/commandList";
import {chats, getUserData} from "./database";
import {setDays, setFWarn, setLitrbol, setRep, setScore, setVig, setWarn} from "./commands/commandWarn";
import {getHistory} from "./commands/commandHistory";
import {setRole} from "./commands/commandSetRole";
import {getOnlineUser} from "./commands/commandOnline";
import {setDataUser} from "./commands/commandSet";
import {checkCooldown} from "./others/cooldowns";
import {project, works} from "./commands/commandProject";
import {
    helpCongress,
    helpEsida,
    helpForum,
    helpHistory,
    helpJustall,
    helpList,
    helpMsg,
    helpSet
} from "./others/helpTexts";
import {msgCommand} from "./commands/commandMsg";
import {congressSetAccess} from "./commands/commandCongress";
import {commandForum, commandForumAccept, commandForumDecline, getFullForum} from "./commands/commandForum";
import {changePassword} from "./commands/commandPassword";

group.hear(/^\//i, async msg => {
    await commandSystem(msg)
})

user.hear(/^\//i, async msg => {
    if (!checkCooldown(msg.senderId)) return
    await commandSystem(msg, false, commandsUser)
})

class Command {
    public access: number;
    public name: string;
    public aliases: string[];
    public description: string;
    public func: (msg, args, sender: any) => void;
    public minArgs: number
    public usage: string
    public fullHelp: string

    constructor(name, access, aliases, func, description = "", usage = "", args = 0, fullHelp = "") {
        this.name = name
        this.access = access
        this.aliases = aliases
        this.func = func
        this.description = description
        this.minArgs = args
        this.usage = `/${name} ${usage}`
        this.fullHelp = fullHelp
    }
}

export let commands: Command[] = [
    new Command("id", 0, ["chat_id"], getID, "–ü–æ–ª—É—á–∏—Ç—å ID –±–µ—Å–µ–¥—ã",),
    new Command("adduser", 4, ["user_add"], addText, "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"),
    new Command("help", 0, ["ehelp"], help, "–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", "[–∫–æ–º–∞–Ω–¥–∞]"),
    new Command("fracs", 0, [], fracs, "–°–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∫—Ü–∏–π"),
    new Command("stats", 0, ["info", "find"], stats, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user]"),
    new Command("list", 0, [], listUsers, "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "[group]", 0, helpList),
    new Command("warn", 5, ["setwarn"], setWarn, "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("vig", 5, ["setvig"], setVig, "–ò–∑–º–µ–Ω–∏—Ç—å –≤—ã–≥–æ–≤–æ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("rep", 5, ["setrep"], setRep, "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("score", 5, ["setscore"], setScore, "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("litrbol", 5, [], setLitrbol, "–ò–∑–º–µ–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –±–∞–ª–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("fwarn", 4, ["setfwarn"], setFWarn, "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –≤—ã–≥–æ–≤–æ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("setday", 5, [], setDays, "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ —Å—Ä–æ–∫–∞", "[user] +/-[–ö–æ–ª-–≤–æ] [–ü—Ä–∏—á–∏–Ω–∞]", 3),
    new Command("history", 0, [], getHistory, "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user] [type]", 2, helpHistory),
    new Command("noadd", 5, [], removedCandidate, "–°–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤", "[user]", 1),
    new Command("setrank", 5, [], promotion, "–ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user] [–î–æ–ª–∂–Ω–æ—Å—Ç—å] [–¢–∏–ø –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è]", 3),
    new Command("setrole", 5, [], setRole, "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user] [–†–æ–ª—å]", 2),
    new Command("online", 1, ["onl"], getOnlineUser, "–ü–æ–ª—É—á–∏—Ç—å –æ–Ω–ª–∞–π–Ω –∏–≥—Ä–æ–∫–∞", "[nick]", 0),
    new Command("set", 5, [], setDataUser, "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user] [type] [value]", 3, helpSet),
    new Command("uval", 5, [], uval, "–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user] [–ü—Ä–∏—á–∏–Ω–∞]", 2),
    new Command("recovery", 5, [], recovery, "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "[user]", 1),
    new Command("msg", 6, [], msgCommand, "–û—Ç—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", "[–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ] [–°–æ–æ–±—â–µ–Ω–∏–µ]", 2, helpMsg),
    new Command("justall", 69, [], justallCommand, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–º JustAll Studio", "[action]", 1, helpJustall),
    new Command("esida", 69, [], project, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º Esida", "[action]", 1, helpEsida),
    new Command("makecongress", 2, [], congressSetAccess, "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω–≥—Ä–µ—Å—Å—É", "[user] [–î–æ—Å—Ç—É–ø]", 2, helpCongress),
    new Command("forum", 3, [], commandForum, "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ñ–æ—Ä—É–º–æ–º", "[action] [url]", 2, helpForum),
    new Command("facc", 5, [], commandForumAccept, "–ü—Ä–∏–Ω—è—Ç—å —Ñ–æ—Ä–º—É –æ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è", "[id form]", 1),
    new Command("fdec", 5, [], commandForumDecline, "–û—Ç–∫–ª–æ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –æ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è", "[id form]", 1),
    new Command("flist", 3, [], getFullForum, "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º"),
    new Command("changepassword", 1, ["changepass"], changePassword, "–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–∞–π—Ç–µ Esida", "[–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å]", 1),
]

export let commandsUser: Command[] = [
    new Command("id", 0, ["chat_id"], getID, "–ü–æ–ª—É—á–∏—Ç—å ID –±–µ—Å–µ–¥—ã"),
    new Command("form", 0, [], form, "–§–æ—Ä–º–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–∞–ø–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"),
]

async function commandSystem(msg, group = true, commandGroup = commands) {
    const command = msg.text.split(" ")[0].substring(1)
    const args = msg.text.split(" ").slice(1)
    let access = 0
    const sender = await getUserData(msg.senderId)
    if (sender) access = sender.access
    if (!works && command != "esida") return
    if (access < 5) {
        for (const chat of chats) {
            if (chat.defaultChat === msg.chatId && group && chat.blackList) return
            else if (chat.userChat === msg.chatId && !group && chat.blackList) return
        }
    }
    let cmd = commandGroup.find(x => x.name == command || x.aliases.includes(command))
    if (!cmd) return
    if (cmd.access > access) return msg.send(`üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: ${cmd.access}`)
    if (cmd.minArgs > args.length) return msg.send(`üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã! üö´\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${cmd.usage}\n\n${cmd.fullHelp}`)
    await cmd.func(msg, args, sender)
}
